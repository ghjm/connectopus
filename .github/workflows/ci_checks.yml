---
name: ci_checks

on:

  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        description: Publish as latest
        default: true
      check_platforms:
        type: boolean
        description: Run platform checks
        default: true

  pull_request:

  push:
    branches:
      - main
    paths:
      - '**/*.go'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.tsx'
      - '**/*.graphqls'
      - '**/*.graphql'
      - '**/*.sh'
      - '**/*.html'
      - '**/*.css'
      - '**/Makefile'
      - '**/package.json'
      - '**/package-lock.json'
      - '**/go.mod'
      - '**/go.sum'

env:
  GO_VERSION: 1.18

jobs:

  linux_checks:
    name: linux_checks
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go build dirs
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ui/package-lock.json

      - name: Install Node modules
        run: cd ui && npm ci --legacy-peer-deps

      - name: Build the UI
        run: make ui

      - name: Run Go linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-cache: true

      - name: Run JS linters
        run: |
          cd ui
          npx prettier --check './**/*.{tsx,ts,js}' --loglevel warn
          npx eslint --ext .tsx,.ts,.js ./src/ --max-warnings 0

      - name: Check formatting
        run: gofmt -l .

      - name: Check that generated code is up to date
        run: |
          go generate ./...
          git diff --exit-code

      - name: Run tests
        run: go test ./... -count=1 -race

      - name: Run root tests
        run: |
          make connectopus
          sudo GOPATH=$HOME/go $(which go) test ./... -test.run 'TestAsRoot*' -count=1 -race

      - name: Build release binaries
        if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || inputs.publish }}
        run: make bin

      - name: Upload release artifacts
        if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || inputs.publish }}
        uses: actions/upload-artifact@v3
        with:
          name: bin
          path: bin/*
          retention-days: 1

  platforms_checks:
    name: platforms_checks
    needs: linux_checks
    if: always() && !(github.event_name == 'workflow_dispatch' && !inputs.check_platforms)
    strategy:
      matrix:
        os:
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go build dirs
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: ui/package-lock.json

      - name: Install Node modules
        run: cd ui && npm ci --legacy-peer-deps

      - name: Build the UI
        run: make ui

      - name: Run tests
        run: go test ./... -count=1

  update_latest:
    name: update_latest
    needs:
      - linux_checks
      - platforms_checks
    if: |
      always() &&
      needs.linux_checks.result == 'success' &&
      (needs.platforms_checks.result == 'success' || needs.platforms_checks.result == 'skipped') &&
      ((github.event_name == 'push' && github.ref == 'refs/heads/main') || inputs.publish)
    runs-on: ubuntu-latest
    concurrency:
      group: latest
    permissions:
      contents: write
      packages: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update latest tag
        uses: EndBug/latest-tag@v1.5.0
        with:
          ref: latest

      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
          name: bin
          path: bin

      - name: Upload artifacts to latest release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/*
          file_glob: true
          tag: latest
          overwrite: true
          body: "This is an automatically generated build of the latest commit that passed CI checks.  Warning: may contain bugs."
          prerelease: true

